@model CheckOutViewModel
@{
    var promotionsJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model.promotions);
}
<div class="cart-table-area section-padding-100">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12 col-lg-8">
                <div class="checkout_details_area mt-50 clearfix">
                    <div class="cart-title">
                        <h2>Checkout</h2>
                        <h2>Mã hóa đơn: @Model.IdOrder</h2>
                    </div>
                    
                    <form asp-controller="Cart" method="post">
                        <input type="hidden" id="ShippingFee" name="ShippingFee" value="">
                        <input type="hidden" id="DiscountPrice" name="DiscountPrice" value="">
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="FirstName">Họ và tên lót</label>
                                <input type="text" class="form-control" id="FirstName" name="FirstName" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="LastName">Tên</label>
                                <input type="text" class="form-control" id="LastName" name="LastName" required>
                            </div>
                        </div>
                        <div class="col-12 mb-3">
                            <label for="Email">Email</label>
                            <input type="email" class="form-control" id="Email" name="Email">
                        </div>

                        <div class="col-12 mb-3">
                            <label for="Address">Tỉnh</label>
                            <input type="text" class="form-control mb-3" id="Province" name="Province" >
                        </div>
                        <div class="col-12 mb-3">
                            <label for="Address">Quận/Huyện</label>
                            <input type="text" class="form-control mb-3" id="District" name="District" >
                        </div>
                        <div class="col-12 mb-3">
                            <label for="Address">Địa chỉ</label>
                            <input type="text" class="form-control mb-3" id="Address" name="Address" onblur="calculateShippingFee()">
                        </div>
                  
                        <div class="col-md-6 mb-3">
                            <label for="PhoneNumber">Số điện thoại</label>
                            <input type="number" class="form-control" id="PhoneNumber" name="PhoneNumber" min="0">
                        </div>
            
          
              


                        <div class="col-12 mb-3">
                            <label for="Note">Ghi chú</label>
                            <textarea name="Note" class="form-control w-100" id="Note" name="Note" cols="30" rows="10"></textarea>
                        </div>
                        <div class="col-12 mb-3">
                       
                            <select for="PromotionId" id="PromotionId" name="PromotionId" onchange="SelectedPrromotion()">
                                <option value="">-- Chọn khuyến mãi --</option>
                                @foreach (var promotion in Model.promotions)
                                {
                                    <option value="@promotion.PromotionID">@promotion.PromotionName</option>
                                }
                            </select>
                        </div>
                        
                        <input type="hidden" id="IdOrder" name="IdOrder" value="@Model.IdOrder">
                        <button type="submit" class="btn amado-btn w-100 mb-2" formaction="CompleteCheckOut">Thanh toán COD</button>
                        <button type="submit" class="btn amado-btn w-100" formaction="CreatePaymentUrl">Thanh toán trực tuyến</button>
                        
                    </form>
                </div>
            </div>
     
            <div class="col-12 col-lg-4">
                <div class="cart-summary">
                    <h5>Cart Total</h5>
                    <ul class="summary-table">
                        <li><span>Tổng cộng:</span> <span>@Model.TotalPrice</span></li>
                        <li><span>Giá giảm:</span> <span id="DiscountAmount">0</span></li>
                        <li><span>Gía giao hàng tiền:</span> <span id="ShippingFeeDisplay">0</span></li>
                        <li><span>Thành tiền:</span> <span id="TotalPrice">@Model.TotalPrice</span></li>
                    </ul>
                </div>
            </div>

        </div>
    </div>
</div>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>

    var isOrderCancelled = false;
    var isFormSubmitted = false;

    window.addEventListener('beforeunload', function (event) {
        if (!isOrderCancelled && !isFormSubmitted) {
            
            cancelOrder();
        }
    });

    document.querySelector('form').addEventListener('submit', function () {
        isFormSubmitted = true;
    });

    function calculateShippingFee() {
        var address = document.getElementById('Address').value;
        var province = document.getElementById('Province').value;
        var district = document.getElementById('District').value;

        // Kiểm tra xem có province và district không
        if (!province || !district) {
            Swal.fire({
                title: 'Yêu cầu nhập đủ thông tin',
                text: 'Vui lòng nhập địa chỉ, tỉnh thành và quận huyện.',
                icon: 'warning',
                showConfirmButton: true
            });
            return; // Dừng hàm nếu thiếu thông tin
        }

        Swal.fire({
            title: 'Đang tính tiền giao hàng...',
            allowOutsideClick: false,
            showConfirmButton: false, 
            onBeforeOpen: () => {
                Swal.showLoading();
            }
        });
        $.ajax({
            type: "POST",
            url: "@Url.Action("CalculateShippingFee", "Cart")",
            data: { Address: address,
                    Province: province,
                    District: district
                    },
   
            success: function (result) {
    
                var shippingFee = result.shippingFee;

                document.getElementById('ShippingFee').value = shippingFee;

                document.getElementById('ShippingFeeDisplay').innerText = shippingFee;

                var finalPrice = @Model.TotalPrice + shippingFee;
              

               
                document.getElementById('TotalPrice').innerText = finalPrice;
                //TotalPrice
                Swal.close();
                Swal.fire({
                    title: 'Tính giá giao hàng thành công!',
                    icon: 'success',
                    timer: 1500, // Đóng tự động sau 1.5 giây
                    showConfirmButton: false
                });
            },
            error: function (error) {
                Swal.close();

                Swal.fire({
                    title: 'Lỗi khi tính giá giao hàng',
                    icon: 'error',
                    showConfirmButton: true
                });
            }
        });
    }

    function cancelOrder() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("RollBackOrder", "Cart")",
            success: function () {
                console.error("Hooạt động ngon ");
            },
            error: function (error) {
                console.error("Lỗi khi gửi yêu cầu xóa sản phẩm: " + error);
            }
        });
    }
    function SelectedPrromotion() {
        var selectedPromotionId = document.getElementById('PromotionId').value;
        var totalPrice = parseFloat(document.getElementById('TotalPrice').innerText.replace(' VND', '').replace(',', ''));

        $.ajax({
            type: "POST",
            url: "@Url.Action("CalculatePromotionFee", "Cart")",
            data: {
                PromotionId: selectedPromotionId,
                TotalPrice: @Model.TotalPrice,
            },
            success: function (result) {
                var DiscountPrice = result.promotionFee;
                var shippingFee = parseFloat(document.getElementById('ShippingFee').value);

                document.getElementById('DiscountPrice').value = DiscountPrice;

                var discountAmountElement = document.getElementById('DiscountAmount');
                var totalPriceElement = document.getElementById('TotalPrice');

                var discountedPrice = parseFloat(@Model.TotalPrice) - parseFloat(DiscountPrice) + shippingFee;

                discountAmountElement.innerText = DiscountPrice + " VND";
                totalPriceElement.innerText = discountedPrice + " VND";
            },
            error: function (error) {
                Swal.fire({
                    title: 'Lỗi khi tính giá ',
                    icon: 'error',
                    showConfirmButton: true
                });
            }
        });
    }



</script>